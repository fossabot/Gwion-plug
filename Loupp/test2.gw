Loup loup;

"vaisseau2" => loup.add => int vaisseau;

"nanoKONTROL2 MIDI 1" => string min_name;
"Mega World USB Game Controllers" => string joy_name;
Evdev joy;
MidiIn min;

fun void find_joystick(string name) {
  int i;
  while(true) {
    if(joy.index(i) == -1)
      break;
    if(joy.name() == name)
      return;
    i++;
  }
  <<<"No Matching Joystick found.", "">>>;
  me.exit();
}

fun void find_nano(string name) {
  int i;
  while(true) {
    if(min.open(i) == -1)
      break;
    if(min.name() == name) {
      if(min.open(i+1) != -1)
        return;
    }
    i++;
  }
  <<<"No Matching Midi Device found.", "">>>;
  me.exit();
}

fun void play(Evdev joy, Loup loup) {
  while(true) {
    joy => now;
    while(joy.recv()) {
      switch(joy.code) {
        case 0:
          joy.value/255. => loup.x;
          break;
        case 1:
          joy.value/255. => loup.y;
          break;
        case 2:
          1 - (joy.value/255.) => loup.scale;
          break;
        case 4: // ????
          break;
        case 16: // hat x
          break;
        case 17: // hat y
          break;
        case 289: // boutton central
          return;
        case 290: // button 1

          break;
        case 291: // button 3
          break;
        case 288: // gachette
          break;
        default:
          <<<joy.code, joy.value>>>;
      }
    }
  }
}

fun void mix_control() {
  while(true) {
    min => now;
    while(min.recv()) {
      min.read();
      <<<"test", min.status, min.data1, min.data2>>>;
    }
  }
}

// disable sobel
min_name => find_nano;
joy_name => find_joystick;
spork ~mix_control();
spork ~play(joy, loup);
5::minute=> now;
